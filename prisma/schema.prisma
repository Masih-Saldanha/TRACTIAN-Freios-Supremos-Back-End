// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Test {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String
}

model Post {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  slug     String    @unique
  title    String
  body     String
  comments Comment[]
  author   User      @relation(fields: [authorId], references: [id])
  authorId String    @db.ObjectId
}

// Comments contain a comment string and connect back to the post.
// postId must have @db.ObjectId to match up with Post's id type
model Comment {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  post    Post   @relation(fields: [postId], references: [id])
  postId  String @db.ObjectId
  comment String
}

model User {
  id    String  @id @default(auto()) @map("_id") @db.ObjectId
  email String  @unique
  name  String?
  posts Post[]
}

// model relation example:

// model Users {
//   id       Int     @id @default(autoincrement())
//   email    String  @unique
//   password String
//   cards    Cards[]

//   @@map("users")
// }

// model Cards {
//   id             Int     @id @default(autoincrement())
//   title          String
//   number         String
//   name           String
//   securityCode   String
//   expirationDate String
//   password       String
//   isVirtual      Boolean
//   type           Card
//   userId         Int
//   users          Users   @relation(fields: [userId], references: [id])

//   @@unique([userId, title])
//   @@map("cards")
// }

// enum example:

// enum Card {
//   credit
//   debit
//   both
// }
